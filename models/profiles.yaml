# This is a sample file, for detailed reference see: https://rudderlabs.github.io/pywht/
models:
  - name: id_graph
    model_type: id_stitcher
    model_spec:
      entity_key: shopify_customer
      materialization:
        run_type: discrete
      validity_time: 24h
      edge_sources:
        - from: inputs/CART_UPDATE
        - from: inputs/CHECKOUT_UPDATED
        - from: inputs/IDENTIFIES
        - from: inputs/ORDER_CREATED
        - from: inputs/ORDER_PAID
        - from: inputs/TRACKS
        - from: inputs/PAGES
        - from: inputs/CHECKOUT_STARTED
        - from: inputs/ORDER_UPDATED
        - from: inputs/PRODUCT_CLICKED
        - from: inputs/PRODUCT_LIST_VIEWED
        - from: inputs/USERS
        - from: inputs/PRODUCT_ADDED
        - from: inputs/PRODUCT_VIEWED
  - name: user_profile
    model_type: feature_table_model
    model_spec:
      entity_key: shopify_customer
      validity_time: 24h
      compatibility_mode:
        linear_dependency_of_vars: false
      features:
        - first_name
        - last_name
        - last_transaction_value
        - last_purchase_date
        - num_days_since_last_purchase_with_macro
        - carts_in_past_365_days
        - latest_cart_id
var_groups:
  - name: shopify_users_vars
    entity_key: shopify_customer
    vars:
      - entity_var:
          select: first_value(first_name)
          name: first_name
          window:
            order_by:
              - timestamp desc
          from: inputs/IDENTIFIES
          where: first_name is not null and first_name!=''
      - entity_var:
          select: first_value(last_name)
          name: last_name
          window:
            order_by:
              - timestamp desc
          from: inputs/IDENTIFIES
          where: last_name is not null and last_name!=''
      - entity_var:
          name: last_transaction_value
          from: inputs/ORDER_CREATED
          select: first_value(SUBTOTAL_PRICE)
          window:
            order_by:
              - case when SUBTOTAL_PRICE is not null then 2 else 1 end desc # interesting way to force and order here.
              - timestamp asc
          description: The total value of products that are part of the last transaction.
      - entity_var:
          name: last_purchase_date
          select: max(ORIGINAL_TIMESTAMP)
          from: inputs/ORDER_CREATED
          description: most recent purchase date per profile id
      - entity_var:
          name: num_days_since_last_purchase_with_macro
          select: "{{macro_datediff('{{shopify_customer.Var(\"last_purchase_date\")}}')}}"
          description: The number of days per main id since last purchase with macro
      - entity_var:
          name: carts_in_past_365_days
          select: count(distinct token)
          from: inputs/CART_UPDATE
          where: "{{macro_datediff_n('timestamp','365')}}"
          description: A cart id is created for events such as create_cart,update_cart. This coln specifies how many cart ids were created in the past 365 days
      - entity_var: # run this first except materialize it as a feature. This is to test how a custom sql model works
          name: latest_cart_id
          from: models/cart_line_items
          select: first_value(token)
          window:
            order_by:
              - timestamp desc

## - example features pulled feature from here: https://github.com/rudderlabs/profiles-shopify-features/blob/main/models/profiles.yaml

#      - entity_var: # run this first except materialize it as a feature. This is to test how a custom sql model works
#          name: latest_cart_id
#          from: models/rsCartLineItems
#          select: first_value(token)
#          window:
#            order_by:
#              - timestamp desc
#          is_feature: false
#      - entity_var: # then build this which references the cart id from above. Then
#          name: last_cart_value_in_dollars
#          select: sum(line_price)
#          from: models/rsCartLineItems
#          where: token={{user.Var("latest_cart_id")}}
#          description: The value of products added in the latest cart.