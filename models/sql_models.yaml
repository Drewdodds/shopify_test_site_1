models:
  - name: cart_line_items
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: table
        run_type: discrete
      single_sql: |
        {% with CartUpdate = this.DeRef("inputs/CART_UPDATE") %}
        SELECT to_char(t.value['brand']) AS brand,
            t.value['discounted_price'] AS discounted_price,
            to_char(t.value['gift_card']) AS gift_card,
            t.value['grams'] AS grams,
            to_char(t.value['id']) AS id,
            to_char(t.value['key']) AS KEY,
            t.value['line_price'] AS line_price,
            t.value['original_line_price'] AS original_line_price,
            t.value['original_price'] AS original_price,
            t.value['price'] AS price,
            to_char(t.value['product_id']) AS product_id,
            to_char(t.value['properties']) AS properties,
            t.value['quantity'] AS quantity,
            to_char(t.value['sku']) AS sku,
            to_char(t.value['taxable']) AS taxable,
            to_char(t.value['title']) AS title,
            t.value['total_discount'] AS total_discount,
            to_char(t.value['variant']) AS _VARIANT_,
            products,
            anonymous_id,timestamp, 
            token
        FROM
        (SELECT *
        FROM
            (SELECT *,
                    row_number() over(PARTITION BY anonymous_id, token
                                                ORDER BY timestamp DESC) AS rn
            FROM {{CartUpdate}} where products is not null)
        WHERE rn = 1), table(flatten(parse_json(products))) t
                {% endwith %}
      ids:
        - select: "anonymous_id"
          type: anonymous_id
          entity: shopify_customer
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids:
          - shopify_customer
        with_columns:
          - name: anonymous_id
#   - name: order_checkout_union
#     model_type: sql_template
#     model_spec:
#       validity_time: 24h # 1 day
#       materialization:
#         output_type: table
#         run_type: discrete
#       single_sql: |
#             select ANONYMOUS_ID,
#                    NOTE_ATTRIBUTES,
#                    email,
#                    USER_ID,
#                    ORIGINAL_TIMESTAMP,
#                    flat_1.VALUE::string as rudderAnonymousId
#                 from DREW_DB.SHOPIFY_TEST.ORDER_CREATED,
#                      lateral flatten (input=> get(parse_json(NOTE_ATTRIBUTES),0)) as flat_1
#             where flat_1.VALUE::string <> 'rudderAnonymousId'
#             union
#             select ANONYMOUS_ID,
#                    NOTE_ATTRIBUTES,
#                    email,
#                    USER_ID,
#                    ORIGINAL_TIMESTAMP,
#                    flat_1.VALUE::string as rudderAnonymousId
#                 from DREW_DB.SHOPIFY_TEST.ORDER_UPDATED,
#                      lateral flatten (input=> get(parse_json(NOTE_ATTRIBUTES),0)) as flat_1
#             where flat_1.VALUE::string <> 'rudderAnonymousId'
#             union
#             select ANONYMOUS_ID,
#                    NOTE_ATTRIBUTES,
#                    email,
#                    USER_ID,
#                    ORIGINAL_TIMESTAMP,
#                    flat_1.VALUE::string as rudderAnonymousId
#                 from DREW_DB.SHOPIFY_TEST.ORDER_PAID,
#                      lateral flatten (input=> get(parse_json(NOTE_ATTRIBUTES),0)) as flat_1
#             where flat_1.VALUE::string <> 'rudderAnonymousId'
#             union
#             select ANONYMOUS_ID,
#                    NOTE_ATTRIBUTES,
#                    email,
#                    USER_ID,
#                    ORIGINAL_TIMESTAMP,
#                    flat_1.VALUE::string as rudderAnonymousId
#                 from DREW_DB.SHOPIFY_TEST.CHECKOUT_UPDATED,
#                      lateral flatten (input=> get(parse_json(NOTE_ATTRIBUTES),0)) as flat_1
#             where flat_1.VALUE::string <> 'rudderAnonymousId'
#       ids:
#         - select: USER_ID
#           type: user_id
#           entity: shopify_customer
#         - select: ANONYMOUS_ID
#           type: anonymous_id
#           entity: shopify_customer
#         - select: lower(email)
#           type: email
#           entity: shopify_customer
#         - select: rudderAnonymousId
#           type: anonymous_id
#           entity: shopify_customer
#         - select: userId
#           type: user_id
#           entity: shopify_customer
